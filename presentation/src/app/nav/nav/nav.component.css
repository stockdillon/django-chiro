.example-container {
  display: flex;
  flex-direction: column;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.example-is-mobile .example-toolbar {
  position: fixed;
  /* Make sure the toolbar will stay on top of the content as it scrolls past. */
  z-index: 2;
}

h1.example-app-name {
  margin-left: 8px;
}

.example-sidenav-container {
  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
      causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
  flex: 1;
}

.example-is-mobile .example-sidenav-container {
  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
      `<body>` to be our scrolling element for mobile layouts. */
  flex: 1 0 auto;
}


button.mat-icon-button {
  outline: none;
}

/* .example-toolbar {
  height: 100%;
} */

.mat-toolbar.mat-primary {
  background: #007AFF;
  color: #fff;
}



.btn-info {
  font-weight: 600;
  color: white;
  border-color: white;
  background-color: inherit !important;
  border: 0px !important;
  box-shadow: 0 0 0 0rem !important;
}

.btn-info:hover, .btn-info:active, .btn-info:not(:disabled):not(.disabled):active {
  font-weight: 600;
  /* color: black;
  border-color: white;
  background-color: white;     */
}

.btn-info:active {
  background-color: inherit;
}

.dropdown-item {
  color: black;
  background-color: white;
}

/* .dropdown.show, .dropdown-menu.show {
  color: inherit;
  background-color: inherit;
} */

.dropdown.show > .btn-info {
  font-weight: 600;
  color: black;
  border-color: white;
  background-color: white;
}

a:hover, #dropdownMenuButton:hover {
  opacity: 1;
  color: white;
}
a:not(:hover), #dropdownMenuButton:not(:hover) {
  opacity: .75;
}

a:hover, a:not(:hover) {
  color: inherit !important;
}

.color-white {
  color: white;
}
